@page "/chat/{Id:guid}"
@using System.Security.Cryptography
@using System.Text
@using Application.Data
@using Application.Util
@using Microsoft.AspNetCore.Components
@inject SessionStorageService StorageService
@inject ChatService ChatService
@implements IDisposable
@inject IJSRuntime JsRuntime

<h1>Welcome to <b>@ChatObject.Title</b></h1>
<div class="d-flex flex-column bd-highlight mb-3" style="height: calc(100vh - 150px);">
    <div class="p-2 flex-grow-1 bd-highlight overflow-auto" id="scroller">
        @foreach (var message in ChatObject.Messages)
        {
            <div>
                <div class="d-flex bd-highlight">
                    <div class="p-1 m-0 bd-highlight flex-column text-right" style="color: hsl(@UserUtil.UserToHue(message.sender), 80%, 40%)">
                        @if (message.sender.LoggedIn)
                        {
                            <b>@message.sender.Name </b><i class="fas fa-user-check" title="User logged in!"></i><b>:</b>
                        }
                        else if (message.sender.Code != "") {
                            <b>@message.sender.Name</b><i class="text-muted small">#@message.sender.Code:</i>
                        } else {
                            <b>@message.sender.Name:</b>
                        }
                        <p class="m-0"><small class="text-muted">@message.createdOn.ToString()</small></p>
                    </div>
                    <div class="p-1 flex-grow-1 bd-highlight flex-column">
                        @foreach (var line in message.message.Split("\n"))
                        {
                            <p class="m-0">@line</p>
                        }
                    </div>    
                </div>
                <hr class="m-1"/>
            </div>
        }
        <div id="anchor"></div>
    </div>
    <div class="p-2 bd-highlight">
        <div class="d-flex bd-highlight">
                <textarea class="form-control p-2 flex-grow bd-highlight" id="messageArea" rows="3" @bind="Message"></textarea>
                <button class="btn btn-primary flex-shrink-1 bd-highlight" id="sendmessage" @onclick="SendMessage">
                    <span class="oi oi-arrow-right" aria-hidden="true"></span>
                </button>
        </div>
    </div> 
</div>
@code {

    [Parameter]
    public Guid Id { get; set; }

    private Data.Chat _chat;
    public Data.Chat ChatObject => _chat ??= ChatService.GetChat((User)StorageService.Storage["User"], Id);
    public string Message;

    protected override async Task OnInitializedAsync()
    {
        ChatObject.NewMessage += HandleNewMessage;
    }
    
    protected override void OnAfterRender(bool firstRender)
    {
        JsRuntime.InvokeVoidAsync("scrollIntoView");
    }
    
    public void Dispose()
    {
        ChatObject.NewMessage -= HandleNewMessage;
    }

    private void HandleNewMessage(object sender, EventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged).Wait();
    }


    void SendMessage()
    {
        StateHasChanged();
        if (Message != "")
        {
            ChatObject.AddMessage(new Message(Message, (User)StorageService.Storage["User"]));
            Message = "";
        }
    }

}